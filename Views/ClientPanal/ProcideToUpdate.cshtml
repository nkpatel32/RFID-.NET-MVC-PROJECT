@model RFID_.NET_MVC_PROJECT.Models.getTokensDetailsForUpdateModel

@{
    Layout = "~/Views/ClientPanal/_ClientLayout.cshtml";
}

<div class="max-w-lg mx-auto p-6 bg-white shadow-lg rounded-lg text-center">
    <h1 class="text-2xl font-bold mb-2">Update Token for @Model.Info.subject_name</h1>

    <p class="text-lg text-green-600 font-semibold">
        Price: ₹@(Model.GetTokenDetailsForUpdate?.price ?? "N/A")
    </p>
    <p class="text-lg text-green-600 font-semibold">
        Token Name: @(Model.GetTokenDetailsForUpdate?.name ?? "N/A")
    </p>
    <p class="text-lg text-green-600 font-semibold">
        Duration: @(Model.GetTokenDetailsForUpdate?.duration_day)
    </p>

    @if (ViewBag.PaymentError != null)
    {
        <div class="text-red-600 font-semibold mt-4">
            <p>@ViewBag.PaymentError</p>
        </div>
    }

    <button id="paymentBtn" class="w-full bg-green-500 text-white p-2 rounded hover:bg-green-600">
        Proceed to Payment
    </button>

    <p class="mt-4 text-gray-500">Click to proceed to payment for your token.</p>
</div>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
    document.getElementById('paymentBtn').addEventListener('click', function () {
        const options = {
            "key": "rzp_test_YwZhdfMsPm2X45", // ✅ Replace with your Razorpay key
            "amount": @Model.GetTokenDetailsForUpdate?.price * 100, // price in paise
            "currency": "INR",
            "name": "RFID Attendance",
            "description": "Update Token - @Model.GetTokenDetailsForUpdate?.name",
            "handler": function (response) {
                // After successful payment
                callUpdateTokenAPI(response.razorpay_payment_id);
            },
            "theme": {
                "color": "#0f9d58"
            }
        };

        const rzp = new Razorpay(options);
        rzp.open();
    });

    function callUpdateTokenAPI(paymentId) {
        const tokenId = "@(Model.GetTokenDetailsForUpdate?.token_id)";
        const ctId = "@(Model.Info?.ct_id)";
        const subjectName = "@(Model.Info?.subject_name)";

        fetch('@Url.Action("ProcideToUpdateProcess", "Client")', {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest',
            },
            body: JSON.stringify({
                token_id: tokenId,
                ct_id: ctId,
                subject_name: subjectName,
                razorpay_payment_id: paymentId
            })
        })
        .then(res => res.json())
        .then(result => {
            if (result.success) {
                alert(result.message);
                window.location.href = '@Url.Action("ClientSubject", "Client")' +
                    '?ct_id=' + encodeURIComponent(result.ct_id) +
                    '&subject_name=' + encodeURIComponent(result.subject_name);
            } else {
                alert(result.message);
            }
        })
        .catch(error => {
            alert("Failed to update token: " + error);
        });
    }
</script>
