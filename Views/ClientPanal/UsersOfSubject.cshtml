@model RFID_.NET_MVC_PROJECT.Models.UsersWhichInSubjectModel
@{
    Layout = "~/Views/ClientPanal/_ClientLayout.cshtml";
}
@{
    ViewBag.Title = "Users in Subject";
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<h2 class="text-xl font-semibold mb-4">Users in Subject</h2>

<div class="overflow-x-auto bg-white rounded-lg shadow-lg">
    <table class="min-w-full table-auto">
        <thead class="bg-gray-100 text-gray-600">
            <tr>
                <th class="py-3 px-6 text-left font-medium">Name</th>
                <th class="py-3 px-6 text-left font-medium">Designation</th>
                <th class="py-3 px-6 text-left font-medium">Email</th>
                <th class="py-3 px-6 text-left font-medium">Mobile</th>
                <th class="py-3 px-6 text-left font-medium">RFID</th>
                <th class="py-3 px-6 text-left font-medium">Actions</th>
            </tr>
        </thead>
        <tbody class="text-gray-700">
            @foreach (var user in Model.UsersWhichInSubject)
            {
                <tr class="border-b hover:bg-gray-50">
                    <td class="py-3 px-6">@user.name</td>
                    <td class="py-3 px-6">@user.designation</td>
                    <td class="py-3 px-6">@user.email</td>
                    <td class="py-3 px-6">@user.mobile</td>
                    <td class="py-3 px-6">@user.rfid</td>
                    <td class="py-3 px-6 flex space-x-3">
                        <a href="javascript:void(0);"
                           onclick="openEditModal(@user.user_id, '@user.name', '@user.designation', '@user.email', '@user.mobile', '@user.rfid')"
                           class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 transition duration-300">
                            Edit
                        </a>

                        <a href="javascript:void(0);"
                           onclick="openDeleteModal(@user.user_id, @Model.Info.ct_id)"
                           class="bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600 transition duration-300">
                            Delete
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


<div id="editModal" class="fixed inset-0 bg-gray-900 bg-opacity-50 hidden flex justify-center items-center">
    <div class="bg-white rounded-lg p-6 w-1/3">
        <h3 class="text-xl font-semibold mb-4">Edit User</h3>
        <!-- Form is no longer submitted through the usual method -->
        <form id="editForm" onsubmit="handleSubmit(event)">
            <input type="hidden" id="userId" name="user_id" />
            <input type="hidden" id="ctId" name="ct_id" />

            <div class="mb-4">
                <label for="designation" class="block text-sm font-medium text-gray-700">Designation</label>
                <input type="text" id="designation" name="designation" class="mt-1 p-2 w-full border rounded-md" required />
            </div>

            <div class="mb-4">
                <label for="rfid" class="block text-sm font-medium text-gray-700">RFID</label>
                <input type="text" id="rfid" name="rfid" class="mt-1 p-2 w-full border rounded-md" required />
            </div>

            <div class="flex justify-end space-x-2">
                <button type="button" onclick="closeEditModal()" class="bg-gray-500 text-white px-4 py-2 rounded-md hover:bg-gray-600">
                    Cancel
                </button>
                <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600">
                    Save
                </button>
            </div>
        </form>
    </div>
</div>
<div id="deleteModal" class="fixed inset-0 bg-gray-900 bg-opacity-50 hidden flex justify-center items-center">
    <div class="bg-white rounded-lg p-6 w-1/3">
        <h3 class="text-xl font-semibold mb-4">Confirm Deletion</h3>
        <p class="mb-4">Are you sure you want to delete this user?</p>

        <form id="deleteForm" onsubmit="handleDeleteSubmit(event)">
            <input type="hidden" id="deleteUserId" name="user_id" />
            <input type="hidden" id="deleteCtId" name="ct_id" />

            <div class="flex justify-end space-x-2">
                <button type="button" onclick="closeDeleteModal()" class="bg-gray-500 text-white px-4 py-2 rounded-md hover:bg-gray-600">
                    Cancel
                </button>
                <button type="submit" class="bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600">
                    Confirm
                </button>
            </div>
        </form>
    </div>
</div>
<script>
    // Function to open the modal and populate form fields with user data
    function openEditModal(userId, name, designation, email, mobile, rfid) {
        document.getElementById("userId").value = userId;
        document.getElementById("ctId").value = @Model.Info.ct_id;
        document.getElementById("designation").value = designation;
        document.getElementById("rfid").value = rfid;

        // Show the modal
        document.getElementById("editModal").classList.remove("hidden");
    }

    function closeEditModal() {
        document.getElementById("editModal").classList.add("hidden");
    }

       function handleSubmit(event) {
        event.preventDefault(); // Prevent default form submission

        const userId = document.getElementById("userId").value;
        const ctId = document.getElementById("ctId").value;
        const designation = document.getElementById("designation").value;
        const rfid = document.getElementById("rfid").value;

        // Prepare the request body
        const requestBody = {
            user_id: userId,
            ct_id: ctId,
            designation: designation,
            rfid: rfid
        };
        console.log("Request Body:", JSON.stringify(requestBody));
        // Perform fetch request to update user
        fetch('@Url.Action("EditUserInSubject", "Client")', {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(requestBody)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Show success message and reload
                alert(data.message); // You can use alert or any UI update method you like
                location.reload(); // Optionally reload the page
            } else {
                // Show error message
                alert(data.message); // Use alert for now, or update the UI accordingly
            }
        })
        .catch(error => {
            // Handle error
           console.log(error.message);
            alert( error.message);
        });

        // Close the modal
        closeEditModal();
    }
</script>
<script>
        function openDeleteModal(userId, ctId) {
        document.getElementById("deleteUserId").value = userId;
        document.getElementById("deleteCtId").value =ctId;
        console.log(userId);
     
        // Show the delete modal
        document.getElementById("deleteModal").classList.remove("hidden");
    }

    // Function to close the delete confirmation modal
    function closeDeleteModal() {
        document.getElementById("deleteModal").classList.add("hidden");
    }

    // Handle delete form submission
    function handleDeleteSubmit(event) {
        event.preventDefault(); // Prevent default form submission

        const userId = document.getElementById("deleteUserId").value;
        const ctId = document.getElementById("deleteCtId").value;

        // Prepare the request body
        const requestBody = {
            user_id: userId,
            ct_id: ctId
        };
        console.log("Delete Request Body:", JSON.stringify(requestBody));

        // Perform fetch request to delete user
        fetch('@Url.Action("DeleteUserInSubject", "Client")', {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(requestBody)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Show success message and reload
                alert(data.message); // You can use alert or any UI update method you like
                location.reload(); // Optionally reload the page
            } else {
                // Show error message
                alert(data.message); // Use alert for now, or update the UI accordingly
            }
        })
        .catch(error => {
            // Handle error
            console.log(error.message);
            alert(error.message);
        });

        // Close the modal
        closeDeleteModal();
    }
</script>
